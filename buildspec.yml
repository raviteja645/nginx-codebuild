# AWS CodeBuild buildspec to build the nginx alpine image
# By Jason Umiker (jason.umiker@gmail.com)

# This requires the following environment variables be set on the Project:
# AWS_DEFAULT_REGION (Supplied by CodeBuild)
# AWS_ACCOUNT_ID
# IMAGE_REPO_NAME
# IMAGE_TAG

version: 0.2
java:
    versions:
      openjdk11:
        commands:
          - echo "Installing Java version 11 ..."

          - export JAVA_HOME="$JAVA_11_HOME"

          - export JRE_HOME="$JRE_11_HOME"

          - export JDK_HOME="$JDK_11_HOME"

          - |-
            for tool_path in "$JAVA_HOME"/bin/*; 
             do tool=`basename "$tool_path"`;
              if [ $tool != 'java-rmi.cgi' ]; 
              then 
               update-alternatives --list "$tool" | grep -q "$tool_path" \
                && update-alternatives --set "$tool" "$tool_path";
              fi; 
            done
      openjdk8:
        commands:
          - echo "Installing Java version 8 ..."

          - export JAVA_HOME="$JAVA_8_HOME"

          - export JRE_HOME="$JRE_8_HOME"

          - export JDK_HOME="$JDK_8_HOME"

          - |-
            for tool_path in "$JAVA_8_HOME"/bin/* "$JRE_8_HOME"/bin/*;
             do tool=`basename "$tool_path"`;
              if [ $tool != 'java-rmi.cgi' ];
              then
              update-alternatives --list "$tool" | grep -q "$tool_path" \
               && update-alternatives --set "$tool" "$tool_path";
              fi;
            done

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - CODEBUILD_RESOLVED_SOURCE_VERSION="${CODEBUILD_RESOLVED_SOURCE_VERSION:-$IMAGE_TAG}"
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_URI .
  post_build:
    commands:
      - bash -c "if [ /"$CODEBUILD_BUILD_SUCCEEDING/" == /"0/" ]; then exit 1; fi"
      - echo Build stage successfully completed on `date`
      - echo Pushing the Docker image...
      - docker push $IMAGE_URI
      - printf '[{"name":"nginx","imageUri":"%s"}]' "$IMAGE_URI" > images.json
artifacts:
  files: images.json
